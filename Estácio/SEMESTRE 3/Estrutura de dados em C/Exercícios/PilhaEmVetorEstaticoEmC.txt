#include <stdio.h>
#include <stdlib.h>
#include <locale.h>

#define N 3

typedef struct PILHA{
	int dados[N];
	int topo;
}PILHA;

void inicializaPilha(PILHA *p){
	int i;
	for(i=0;i<N;i++){
		p->dados[i] = 0;
	}
	p->topo = 0;
}

void empilha(int dado, PILHA *p){
	if(p->topo == N){
		printf("Pilha cheia. \n\n\n");

	} else {
		p->dados[p->topo] = dado;
		p->topo++;
		printf("Empilhando o %d na posição %d \n", dado, p->dados[N]);
	}
}

int desempilha(PILHA *p){
	if(p->topo == 0){
		printf("Pilha vazia. \n");
		return 0;
	} else {
		p->topo--;
		return p->dados[p->topo];
	}
}

void imprimePilha(PILHA *p){
	int i;
	printf("Imprimindo a pilha: \n");
	for(i = 0; i < p->topo; i++){
		printf("%d ", p->dados[i]);
	}
	printf("\n\n");
}

int main(){
	setlocale(LC_ALL, "Portuguese");

	PILHA p1;

	inicializaPilha(&p1);

	empilha(10, &p1);
	imprimePilha(&p1);
	empilha(20, &p1);
	imprimePilha(&p1);
	empilha(30, &p1);
	imprimePilha(&p1);
	empilha(40, &p1);
	//imprimePilha(&p1);
	//system("pause");
	//system("cls");

	printf("Desempilhando: %d\n", desempilha(&p1));
	imprimePilha(&p1);
	printf("Desempilhando: %d\n", desempilha(&p1));
	imprimePilha(&p1);
	printf("Desempilhando: %d\n", desempilha(&p1));
	imprimePilha(&p1);
	printf("Desempilhando: %d\n", desempilha(&p1));
}
